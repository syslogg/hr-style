/*

    -= HR GRID =-
    - Layout grid
        - Class:
            - layout-fluid
                * root of layout with width in 100%.
            - layout-fixed
                * root of layout with width variant.
*/

/* -= Devices width =- */
/* Sizes:xs , s, md, l */
@max-device-xs: 520px;
@max-device-s: 960px;
@max-device-md: 1920px;


/* -= Grid configuration =- */
@width-fluid: 80%;
@width-fixed: 960px;

@gutter: 1%;
@grid-amount: 12;

@margin-fixed: 20px;

/* -= Root of layout =-*/
.layout { margin:0 auto; }
.layout-fluid { width:@width-fluid; .layout; }
.layout-fixed { width: @width-fixed; .layout; }

.layout-row { position:relative; .clearfix;}

[class*="layout-xs-"],[class*="layout-s-"],[class*="layout-md-"],[class*="layout-l-"] { .make-cols(12); float:left; margin:0 @gutter !important; min-height: 1px; }

//loop for layout grid
.layout-loop-xs(@i) when (@i <= @grid-amount){
    .layout-xs-@{i}{
        .make-cols(@i);
    }
    .layout-loop-xs(@i + 1);
}
.layout-loop-xs(1);

@media screen and (min-width:@max-device-xs) {
    .layout-loop-s(@i) when (@i <= @grid-amount) {
        .layout-s-@{i} {
            .make-cols(@i);
        }
        .layout-loop-s(@i + 1);
    }
    .layout-loop-s(1);
}

@media screen and (min-width: @max-device-s) {
    .layout-loop-md(@i) when (@i <= @grid-amount) {
        .layout-md-@{i} {
            .make-cols(@i);
        }
        .layout-loop-md(@i + 1);
    }
    .layout-loop-md(1);
}

@media screen and (min-width: @max-device-md) {
    .layout-loop-l(@i) when (@i <= @grid-amount) {
        .layout-l-@{i} {
            .make-cols(@i);
        }
        .layout-loop-l(@i + 1);
    }
    .layout-loop-l(1);
}
    



//Mixin for columns
.make-cols(@col) { width:((100%/@grid-amount)*@col) - 2*@gutter; }
.make-offset-cols(@col) { margin-left:@col; }
